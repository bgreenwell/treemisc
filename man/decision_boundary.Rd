% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decision_boundary.R
\name{decision_boundary}
\alias{decision_boundary}
\alias{decision_boundary.default}
\title{Add decision boundary to a scatterplot.}
\usage{
decision_boundary(model, train, y, x1, x2, pfun, grid.resolution = 100, ...)

\method{decision_boundary}{default}(
  model,
  train,
  y,
  x1,
  x2,
  pfun = NULL,
  grid.resolution = 100,
  ...
)
}
\arguments{
\item{model}{The associated model object.}

\item{train}{Data frame of training observations.}

\item{y}{Character string giving the name of the outcome variable in 
\code{train}.}

\item{x1}{Character string giving the name of the predictor in \code{train} 
that corresponds to the x-axis.}

\item{x2}{Character string giving the name of the predictor in \code{train} 
that corresponds to the y-axis.}

\item{pfun}{Optional prediction wrapper that returns a vector of predicted
predicted class labels. It must have exactly two arguments: \code{object} and
\code{newdata}.}

\item{grid.resolution}{Integer specifying the resolution of the contour plot.
Default is \code{100}.}

\item{...}{Additional optional arguments to be passed on to 
\code{\link[graphics]{contour}}.}
}
\description{
Adds the decision boundary from a classification model (binary or multiclass)
to an existing scatterplot.
}
\note{
Based on a function written by Michael Hahsler; see
https://michael.hahsler.net/SMU/EMIS7332/R/viz_classifier.html.
}
